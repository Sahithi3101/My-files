# ===== main.py =====

from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from typing import List, Optional

app = FastAPI()

# In-memory storage
books = []
reviews = []

# Data models
class Review(BaseModel):
    reviewer: str
    comment: str
    rating: int
    book_id: int

class Book(BaseModel):
    id: int
    title: str
    author: str
    description: Optional[str] = None

# === BOOK ENDPOINTS ===

@app.post("/books/add")
def add_book(book: Book):
    books.append(book)
    return {"message": "Book added successfully", "book": book}

@app.get("/books")
def get_books():
    return books

@app.get("/books/{book_id}")
def get_book(book_id: int):
    for book in books:
        if book.id == book_id:
            return book
    raise HTTPException(status_code=404, detail="Book not found")

# === REVIEW ENDPOINTS ===

@app.post("/reviews/add")
def add_review(review: Review):
    for book in books:
        if book.id == review.book_id:
            reviews.append(review)
            return {"message": "Review added successfully", "review": review}
    raise HTTPException(status_code=404, detail="Book not found for review")

@app.get("/reviews")
def get_all_reviews():
    return reviews

@app.get("/books/{book_id}/reviews")
def get_reviews_for_book(book_id: int):
    book_reviews = [r for r in reviews if r.book_id == book_id]
    return book_reviews

"""
======= HOW TO RUN =======

1. Save this file as main.py
2. Install dependencies:
   pip install fastapi uvicorn
3. Run the app:
   uvicorn main:app --reload
4. Open browser:
   http://127.0.0.1:8000/docs

======= SAMPLE REQUESTS =======

1. POST /books/add
{
  "id": 1,
  "title": "Atomic Habits",
  "author": "James Clear",
  "descr
